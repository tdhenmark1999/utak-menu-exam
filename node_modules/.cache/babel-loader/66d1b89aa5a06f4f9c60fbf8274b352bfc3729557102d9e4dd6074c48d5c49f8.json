{"ast":null,"code":"var _jsxFileName = \"/Users/dhenmark/Documents/workspace/test/utak-menu/src/components/MenuPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database } from '../firebase';\nimport { ref, onValue, push, update, remove } from 'firebase/database';\nimport MenuItemForm from './MenuItemForm';\nimport MenuItemList from './MenuItemList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuPage = () => {\n  _s();\n  const [menuItems, setMenuItems] = useState([]);\n  useEffect(() => {\n    const menuRef = ref(database, 'menuItems');\n    onValue(menuRef, snapshot => {\n      const items = snapshot.val();\n      const itemList = [];\n      for (let id in items) {\n        itemList.push({\n          id,\n          ...items[id]\n        });\n      }\n      setMenuItems(itemList);\n    });\n  }, []);\n  const addItem = item => {\n    const menuRef = ref(database, 'menuItems');\n    push(menuRef, item);\n  };\n  const updateItem = (id, updatedItem) => {\n    const itemRef = ref(database, `menuItems/${id}`);\n    update(itemRef, updatedItem);\n  };\n  const deleteItem = id => {\n    const itemRef = ref(database, `menuItems/${id}`);\n    remove(itemRef);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurant Menu Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItemForm, {\n      addItem: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItemList, {\n      items: menuItems,\n      updateItem: updateItem,\n      deleteItem: deleteItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuPage, \"aerj4MrH8qL8Ldj4pa1rYEuE5iM=\");\n_c = MenuPage;\nexport default MenuPage;\nvar _c;\n$RefreshReg$(_c, \"MenuPage\");","map":{"version":3,"names":["React","useState","useEffect","database","ref","onValue","push","update","remove","MenuItemForm","MenuItemList","jsxDEV","_jsxDEV","MenuPage","_s","menuItems","setMenuItems","menuRef","snapshot","items","val","itemList","id","addItem","item","updateItem","updatedItem","itemRef","deleteItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dhenmark/Documents/workspace/test/utak-menu/src/components/MenuPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { database } from '../firebase';\nimport { ref, onValue, push, update, remove } from 'firebase/database';\nimport MenuItemForm from './MenuItemForm';\nimport MenuItemList from './MenuItemList';\nimport { MenuItem, MenuItemInitial } from '../types';\n\nconst MenuPage: React.FC = () => {\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  useEffect(() => {\n    const menuRef = ref(database, 'menuItems');\n    onValue(menuRef, (snapshot) => {\n      const items = snapshot.val();\n      const itemList: MenuItem[] = [];\n      for (let id in items) {\n        itemList.push({ id, ...items[id] });\n      }\n      setMenuItems(itemList);\n    });\n  }, []);\n\n  const addItem = (item: MenuItemInitial) => {\n    const menuRef = ref(database, 'menuItems');\n    push(menuRef, item);\n  };\n\n  const updateItem = (id: string, updatedItem: MenuItemInitial) => {\n    const itemRef = ref(database, `menuItems/${id}`);\n    update(itemRef, updatedItem);\n  };\n\n  const deleteItem = (id: string) => {\n    const itemRef = ref(database, `menuItems/${id}`);\n    remove(itemRef);\n  };\n\n  return (\n    <div>\n      <h1>Restaurant Menu Management</h1>\n      <MenuItemForm addItem={addItem} />\n      <MenuItemList items={menuItems} updateItem={updateItem} deleteItem={deleteItem} />\n    </div>\n  );\n};\n\nexport default MenuPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,GAAG,EAAEC,OAAO,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,QAAQ,mBAAmB;AACtE,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAa,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMe,OAAO,GAAGb,GAAG,CAACD,QAAQ,EAAE,WAAW,CAAC;IAC1CE,OAAO,CAACY,OAAO,EAAGC,QAAQ,IAAK;MAC7B,MAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC5B,MAAMC,QAAoB,GAAG,EAAE;MAC/B,KAAK,IAAIC,EAAE,IAAIH,KAAK,EAAE;QACpBE,QAAQ,CAACf,IAAI,CAAC;UAAEgB,EAAE;UAAE,GAAGH,KAAK,CAACG,EAAE;QAAE,CAAC,CAAC;MACrC;MACAN,YAAY,CAACK,QAAQ,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,OAAO,GAAIC,IAAqB,IAAK;IACzC,MAAMP,OAAO,GAAGb,GAAG,CAACD,QAAQ,EAAE,WAAW,CAAC;IAC1CG,IAAI,CAACW,OAAO,EAAEO,IAAI,CAAC;EACrB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACH,EAAU,EAAEI,WAA4B,KAAK;IAC/D,MAAMC,OAAO,GAAGvB,GAAG,CAACD,QAAQ,EAAE,aAAamB,EAAE,EAAE,CAAC;IAChDf,MAAM,CAACoB,OAAO,EAAED,WAAW,CAAC;EAC9B,CAAC;EAED,MAAME,UAAU,GAAIN,EAAU,IAAK;IACjC,MAAMK,OAAO,GAAGvB,GAAG,CAACD,QAAQ,EAAE,aAAamB,EAAE,EAAE,CAAC;IAChDd,MAAM,CAACmB,OAAO,CAAC;EACjB,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCrB,OAAA,CAACH,YAAY;MAACc,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCrB,OAAA,CAACF,YAAY;MAACS,KAAK,EAAEJ,SAAU;MAACU,UAAU,EAAEA,UAAW;MAACG,UAAU,EAAEA;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,QAAkB;AAAAqB,EAAA,GAAlBrB,QAAkB;AAuCxB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}